      mov r0, #.green
      mov r1, #.white
      mov r2, #2        ; no of repid
      mov r3, #5        ; delay duration
main:
      push {r0, r1, r2, r3}
      mov r0, r0
      mov r1, r1
      mov r2, r2
      mov r3, r3
      bl flashpattern
      pop {r0, r1, r2, r3}
      b main
      halt              ; end program
//**************************************************//
delay:                  ; take r0 as delay duration
      push {r3, r4, r5, r6}
      mov r3, r0
      ldr r4, .Time
timer: 
      ldr r5, .Time
      sub r6, r5, r4
      cmp r6, r3
      blt timer
      pop {r3, r4, r5, r6}
      ret 
//**************************************************//
drawpixel:              ; take r0 as color, r1 as delay duration
      push {lr}
      push {r0} 
      mov r0, r1
      bl delay 
      pop {r0}
      str r0, .Pixel367 
      pop {lr}
      ret
//**************************************************//
flashpattern:           ; take r0 as no of rapid, r1 as delay duration
      push {lr}
      push {r3, r4, r5, r6}
      mov r6, r3        ; delay duration
      mov r5, r2        ; no of rapids
      mov r4, r1        ; white
      mov r3, r0        ; green
flash:
// turn green
      push {r0, r1}
      mov r0, r3        ; color value
      mov r1, #1        ; delay duration
      bl drawpixel
      pop {r0, r1}
// turn white
      push {r0, r1}
      mov r0, r4        ; color value
      mov r1, #1        ; delay duration
      bl drawpixel
      pop {r0, r1}
// rapid counter
      sub r5, r5, #1
      cmp r5, #0
      bne flash
      push {r0}
      mov r0, r6        ; delay duration
      bl delay
      pop {r0} 
      pop {r3, r4, r5, r6}
      pop {lr}
      ret
